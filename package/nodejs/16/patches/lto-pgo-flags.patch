--- a/common.gypi
+++ b/common.gypi
@@ -170,8 +170,8 @@
       'Release': {
         'variables': {
           'v8_enable_handle_zapping': 0,
-          'pgo_generate': ' -fprofile-generate ',
-          'pgo_use': ' -fprofile-use -fprofile-correction ',
+          'pgo_generate': ' -fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR) ',
+          'pgo_use': ' -fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR) ',
           'conditions': [
             ['node_shared != "true"', {
               'MSVC_runtimeType': 0    # MultiThreaded (/MT)
@@ -179,7 +179,7 @@
               'MSVC_runtimeType': 2   # MultiThreadedDLL (/MD)
             }],
             ['llvm_version=="0.0"', {
-              'lto': ' -flto=4 -fuse-linker-plugin -ffat-lto-objects ', # GCC
+              'lto': ' -flto=2 -fuse-linker-plugin -ffat-lto-objects -flto-partition=none ', # GCC
             }, {
               'lto': ' -flto ', # Clang
             }],
--- a/deps/openssl/openssl-cli.gypi
+++ b/deps/openssl/openssl-cli.gypi
@@ -21,5 +21,9 @@
         ],
       },
     }],
+    # Avoid excessive LTO & PGO
+    ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+    ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+    ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
   ],
 }
--- a/deps/openssl/openssl.gyp
+++ b/deps/openssl/openssl.gyp
@@ -49,6 +49,10 @@
         }, {
           'includes': ['./openssl-cl_asm.gypi'],
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
     },
   ],
--- a/node.gyp
+++ b/node.gyp
@@ -1079,6 +1079,10 @@
         [ 'OS!="linux" or ossfuzz!="true"', {
           'type': 'none',
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
     }, # fuzz_url
     { # fuzz_env
@@ -1122,6 +1126,10 @@
         [ 'OS!="linux" or ossfuzz!="true"', {
           'type': 'none',
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
     }, # fuzz_env
     {
@@ -1225,6 +1233,10 @@
             'Ws2_32.lib',
           ],
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
     }, # cctest
 
@@ -1281,6 +1293,10 @@
             'Ws2_32.lib',
           ],
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
     }, # embedtest
 
@@ -1299,6 +1315,10 @@
             'test/overlapped-checker/main_unix.c'
           ],
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ]
     }, # overlapped-checker
 
@@ -1361,6 +1381,10 @@
             'Ws2_32.lib',
           ],
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
     }, # mkcodecache
     {
@@ -1412,6 +1436,10 @@
             'Ws2_32.lib',
           ],
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
     }, # node_mksnapshot
   ], # end targets
--- a/tools/icu/icu-generic.gyp
+++ b/tools/icu/icu-generic.gyp
@@ -429,6 +429,12 @@
         '<@(icu_src_derb)',
         'no-op.cc',
       ],
+      'conditions': [
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
+      ],
     },
     # This tool is used to rebuild res_index.res manifests
     {
@@ -440,6 +446,12 @@
         'iculslocs.cc',
         'no-op.cc',
       ],
+      'conditions': [
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
+      ],
     },
     # This tool is used to package, unpackage, repackage .dat files
     # and convert endianesses
@@ -452,6 +464,12 @@
         '<@(icu_src_icupkg)',
         'no-op.cc',
       ],
+      'conditions': [
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
+      ],
     },
     # this is used to convert .dat directly into .obj
     {
@@ -463,6 +481,12 @@
         '<@(icu_src_genccode)',
         'no-op.cc',
       ],
+      'conditions': [
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
+      ],
     },
   ],
 }
--- a/tools/v8_gypfiles/d8.gyp
+++ b/tools/v8_gypfiles/d8.gyp
@@ -63,6 +63,10 @@
             '<(icu_gyp_path):icudata',
           ],
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
     },
   ],
--- a/tools/v8_gypfiles/v8.gyp
+++ b/tools/v8_gypfiles/v8.gyp
@@ -1377,6 +1377,10 @@
         ['want_separate_host_toolset', {
           'toolsets': ['host'],
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
       'defines!': [
         'BUILDING_V8_SHARED=1',
@@ -1413,6 +1417,10 @@
         ['want_separate_host_toolset', {
           'toolsets': ['host'],
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
     },  # mksnapshot
     {
@@ -1426,6 +1434,10 @@
         ['want_separate_host_toolset', {
           'toolsets': ['host'],
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
       'defines!': [
         '_HAS_EXCEPTIONS=0',
@@ -1460,6 +1472,10 @@
         ['want_separate_host_toolset', {
           'toolsets': ['host'],
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
       'dependencies': [
         'torque_base',
@@ -1492,6 +1508,10 @@
         ['want_separate_host_toolset', {
           'toolsets': ['host'],
         }],
+        # Avoid excessive LTO & PGO
+        ['enable_lto=="true"', { 'ldflags': [ '-fno-lto' ], }],
+        ['enable_pgo_generate=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-generate -fprofile-update=prefer-atomic -fprofile-dir=$(PGO_DIR)' ], }, ],
+        ['enable_pgo_use=="true"', { 'cflags': [ '-fno-profile' ], 'cflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], 'ldflags': [ '-fno-profile' ], 'ldflags!': [ '-fprofile-use -fprofile-correction -fprofile-dir=$(PGO_DIR)' ], }, ],
       ],
       'sources': [
         "<(V8_ROOT)/src/regexp/gen-regexp-special-case.cc",
