#!/bin/sh
# SPDX-License-Identifier: Apache-2.0
# (c) 2020-2023, Konstantin Demin

set -f

me="${0##*/}"
usage() {
	cat >&2 <<-EOF
	# usage:
	#   add:     ${me} <name> <priority> <selector> <package> [<package> ..]
	#   remove:  ${me} <name> {rm|remove}
	#   status:  ${me} <name> status
	EOF
	exit "${1:-0}"
}
[ $# != 0 ] || usage

msg() { echo ${1:+"# ${me}: $*"} >&2 ; }
msgf() {
	_____fmt="$1" ; shift
	env printf "# ${me}: ${_____fmt}\\n" ${@+"$@"} >&2
	unset _____fmt
}

status() {
	status=$( [ -s "${pin_file}" ] && echo present || echo 'missing or empty')
	msg "${name} is ${status}"
	[ -s "${pin_file}" ]
}

wrong_pin_name() {
	if [ -n "$2" ] ; then
		msgf 'wrong pin name: %q -> %q' "$1" "$2"
	else
		msgf 'wrong pin name: %q' "$1"
	fi
	usage 1
}

# verify name
name=
while : ; do
	if printf '%s' "$1" | grep -zqE '(^\.|\.\.|/|\\|[[:space:]])' ; then
		break
	fi
	name="$1"
	break
done
if [ -z "${name}" ] ; then
	wrong_pin_name "$1"
fi

pin_file="/etc/apt/preferences.d/$1"
if [ -h "${pin_file}" ] ; then
	wrong_pin_name "$1"
fi

pin_file=$(readlink -f "${pin_file}")
case "${pin_file}" in
/etc/apt/preferences.d/* ) ;;
* )
	wrong_pin_name "$1" "${pin_file}"
;;
esac

if [ -h "${pin_file}" ] ; then
	wrong_pin_name "$1" "${pin_file}"
fi

[ $# -ge 2 ] || usage 1

# verify priority/action
prio=$(printf '%s' "$2" | tr '[:upper:]' '[:lower:]')
case "${prio}" in
rm | remove )
	rm -v "${pin_file}" || :
	exit
;;
status )
	status
	exit
;;
# internal
get-path )
	echo "${pin_file}"
	exit 0
;;
esac
if ! printf '%s' "${prio}" | grep -zqE '^(0|-?[1-9][0-9]*)$' ; then
	msgf 'wrong pin priority/action: %q' "$2"
	usage 1
fi

# verify pin selector
shift 2
if [ -z "$1" ] ; then
	msg 'empty pin selector'
	usage 1
fi

distro=$(sed -En '/^ID=(.+)$/s//\1/p' /etc/os-release)
suite=$(sed -En '/^VERSION_CODENAME=(.+)$/s//\1/p' /etc/os-release)

pin=$(printf '%s' "$1" | sed -e "s/@{distro}/${distro}/g;s/@{suite}/${suite}/g")

case "${pin}" in
# full qualified pinning stanza?
*\ * ) ;;
# unqualified pinning stanza
* )
	pin="release a=${pin}"
;;
esac

(
	set -e
	touch "${pin_file}"
	ensure-eol-empty-line "${pin_file}"
) || {
	msg "unable to write to file: ${pin_file}"
	exit 1
}

shift
for i ; do
	[ -n "$i" ] || continue

	pkg=$(printf '%s' "$i" | sed -e "s/@{distro}/${distro}/g;s/@{suite}/${suite}/g")

	cat >> "${pin_file}" <<-EOF
	Package: ${pkg}
	Pin: ${pin}
	Pin-Priority: ${prio}

	EOF
done
