#!/bin/sh
# SPDX-License-Identifier: Apache-2.0
# (c) 2023, Konstantin Demin

set -ef

charmap_assume='UTF-8'
conf_file='/etc/k2/dpkg-filter/locales.select'
defconf_file='/etc/k2/dpkg-filter/locales'

me="${0##*/}"
usage() {
	cat >&2 <<-EOF
	# usage: ${me} <default locale> [.. locales]
	# common locale format:
	#   <lang>.<charmap>
	# locale formats where <charmap> is assumed to be "${charmap_assume}":
	#   <lang>
	#   <lang>@<specifier>
	# "explicit" locale formats (script-specific):
	#   <lang>:<charmap>
	#   <lang>@<specifier>:<charmap>
	EOF
	exit "${1:-0}"
}
[ $# != 0 ] || usage 1

log() { echo "${me}: $*" >&2 ; }

_all= ; _locales= ; _langs= ; _charmaps=
for i ; do
	lang= ; charmap= ; extra=
	IFS=: read -r lang charmap extra <<-EOF
	$i
	EOF

	if [ -z "${lang}" ] ; then
		log "wrong locale definition: '$i'"
		continue
	fi

	lang_sep= ; alt_sep=
	case "${lang}" in
	*@* ) lang_sep='@' ; alt_sep='.' ;;
	*.* ) lang_sep='.' ; alt_sep='@' ;;
	esac
	if [ -n "${lang_sep}" ] ; then
		_lang1= ; _lang2=
		IFS="${lang_sep}" read -r _lang1 _lang2 <<-EOF
		${lang}
		EOF

		if [ -z "${_lang1}" ] ; then
			log "wrong locale definition: '$i'"
			continue
		fi
		if [ -z "${_lang2}" ] ; then
			log "wrong locale definition: '$i'"
			continue
		fi

		case "${lang}" in
		*"${alt_sep}"* )
			log "suspicious locale definition: '$i'"
			continue
		;;
		esac

		unset _lang1 _lang2
	fi
	unset lang_sep alt_sep

	if [ -n "${extra}" ] ; then
		log "locale '$i' definition has extra specifier '${extra}' which is ignored"
	fi

	case "${lang}" in
	*.* ) charmap="${lang#*.}" ;;
	esac
	if [ -z "${charmap}" ] ; then
		log "locale '$i' definition is missing charmap, assuming ${charmap_assume}"
		charmap=${charmap_assume}
	fi

	purelang="${lang%.*}"

	locale="${lang}"
	case "${lang}" in
	*@* | *.* ) ;;
	* ) locale="${lang}.${charmap}" ;;
	esac

	_all="${_all}${_all:+ }${locale}:${charmap}"
	_locales="${_locales}${_locales:+ }${locale}"
	_charmaps="${_charmaps}${_charmaps:+ }${charmap}"

	_langs="${_langs}${_langs:+ }${purelang}"
	case "${lang}" in
	*@* )
		_langs="${_langs}${_langs:+ }${lang%@*}"
	;;
	esac
done

default_locale="${_locales%% *}"
locales_charmaps=$(printf '%s\n' ${_all} | sort -uV | paste -sd',' | tr ':' ' ' | sed -e 's/,/, /g')
charmaps=$(printf '%s\n' ${_charmaps} | sort -uV | paste -sd' ')
langs=$(printf '%s\n' ${_langs} | sort -uV | paste -sd' ')

t=$(mktemp)
{
	if [ -s "${conf_file}" ] ; then
		cat "${conf_file}"
	fi
	for i in ${charmaps} ; do
		echo "keep=/usr/share/i18n/charmaps/$i"
		echo "keep=/usr/share/i18n/charmaps/$i.*"
	done
	for i in ${langs} ; do
		echo "keep=/usr/share/locale/$i/**"
		echo "keep=/usr/share/i18n/locales/$i"
	done
} | sort -uV > "$t"
grep -Fxv -f "${defconf_file}" < "$t" > "${conf_file}" || :
rm -f "$t" ; unset t

cat >/etc/default/locale <<-EOF
#  File generated by ${me}
LANG=${default_locale}
EOF

{
  echo "locales  locales/default_environment_locale  select       ${default_locale}"
  echo "locales  locales/locales_to_be_generated     multiselect  ${locales_charmaps}"
} | debconf-set-selections

cat >&2 <<-EOF
# default locale: ${default_locale}
# charmaps: ${charmaps}
# languages: ${langs}
# all locales: ${locales_charmaps}
EOF
