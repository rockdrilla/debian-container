#!/bin/sh
# SPDX-License-Identifier: Apache-2.0
# (c) 2018-2023, Konstantin Demin

set -ef

me="${0##*/}"
usage() {
	cat >&2 <<-EOF
	# usage: ${me} <repo uri> <distribution>
	EOF
	exit "${1:-0}"
}
[ $# != 0 ] || usage

arg_ok=
while : ; do
	[ -n "$1" ] || break
	[ -n "$2" ] || break
	arg_ok=1
break ; done
[ -n "${arg_ok}" ] || usage 1

msg() { echo ${1:+"# ${me}: $*"} >&2 ; }

have_cmd() {
	if ! command -v "$1" >/dev/null 2>&1 ; then
		msg "unable to find '$1' - install package '${2:-$1}' first"
		exit 1
	fi
}

have_cmd curl

gpg_on() { gpg-batch start ; }
gpg_off() {
	cd /
	gpg-batch stop
	exit "${1:-0}"
}

join_lines() { sed -zE 's/[[:space:]]+/ /g;s/^ //;s/ $//' ; }

gpg_keys_from_sig() {
	set +e
	gpg --no-options --verify "$@" 2>&1 \
	| sed -En 's/[[:space:]]+/ /g;s/ $//;/^gpg: using .+ key (\S+)$/{s,,\1,p}'
	set -e
}

d=$(mktemp -d) ; : "${d:?}"
export GNUPGHOME="$d"

(

gpg_on

cd "$d"

if curl -sSL -o InRelease "$1/dists/$2/InRelease" ; then
	gpg_keys_from_sig InRelease > fpr
	if [ -s fpr ] ; then
		cat fpr
		gpg_off
	fi
	rm -f InRelease
fi

if curl -sSL -o Release.gpg "$1/dists/$2/Release.gpg" ; then
	curl -sSL -o Release "$1/dists/$2/Release"

	gpg_keys_from_sig Release.gpg Release > fpr
	if [ -s fpr ] ; then
		cat fpr
		gpg_off
	fi
fi

gpg_off 1

) || gpg_off 1
