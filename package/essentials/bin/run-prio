#!/bin/sh
# SPDX-License-Identifier: Apache-2.0
# (c) 2023, Konstantin Demin

set -ef

me="${0##*/}"
usage() {
	cat >&2 <<-EOF
	# usage: ${me} <nice spec>[:<ionice spec>[:<chrt spec>]] [command and arguments]
	# nice spec: <level>
	# ionice spec: <class>[ <level>]
	# chrt spec: <level>[ <chrt options>]
	EOF
	exit "${1:-0}"
}
[ $# != 0 ] || usage
[ -n "$1" ] || usage 1

msg() { echo ${1:+"# ${me}: $*"} >&2 ; }
msgf() {
	_____fmt="$1" ; shift
	env printf "# ${me}: ${_____fmt}\\n" ${@+"$@"} >&2
	unset _____fmt
}

prio_spec="$1" ; shift

unset nice_spec ionice_spec chrt_spec xtra
IFS=':' read -r nice_spec ionice_spec chrt_spec xtra <<-EOF
${prio_spec}
EOF

nice_level=${nice_spec}
if [ -z "${nice_level}" ] ; then
	msg 'BUG: "nice:level" expected but empty.'
	usage 1
fi

if [ -n "${xtra}" ] ; then
	msgf 'warning: extra data in specifier: %q' "${xtra}"
fi

if [ -n "${ionice_spec}" ] ; then
	unset ionice_class ionice_level xtra
	read -r ionice_class ionice_level xtra <<-EOF
	${ionice_spec}
	EOF

	if [ -z "${ionice_class}" ] ; then
		msg 'BUG: "ionice:class" expected but empty.'
		usage 1
	fi

	if [ -n "${xtra}" ] ; then
		msgf 'ionice: extra data: %q' "${xtra}"
	fi
fi

if [ -n "${chrt_spec}" ] ; then
	unset chrt_prio chrt_opt
	read -r chrt_prio chrt_opt <<-EOF
	${chrt_spec}
	EOF

	if [ -z "${chrt_prio}" ] ; then
		msg 'BUG: "chrt:prio" expected but empty.'
		usage 1
	fi
fi

x=''

if nice -n "${nice_level}" true >&2 ; then
	x="$x${x:+ }nice -n ${nice_level}"
fi

while [ -n "${ionice_spec}" ] ; do
	if [ -n "${ionice_level}" ] ; then
		if ionice -c "${ionice_class}" -n "${ionice_level}" true >&2 ; then
			x="$x${x:+ }ionice -c ${ionice_class} -n ${ionice_level}"
			break
		fi
	fi

	if ionice -c "${ionice_class}" true >&2 ; then
		x="$x${x:+ }ionice -c ${ionice_class}"
		break
	fi
break ; done

while [ -n "${chrt_spec}" ] ; do
	if [ -n "${chrt_opt}" ] ; then
		if chrt ${chrt_opt} "${chrt_prio}" true >&2 ; then
			x="$x${x:+ }chrt ${chrt_opt} ${chrt_prio}"
			break
		fi
	fi

	if chrt "${chrt_prio}" true >&2 ; then
		x="$x${x:+ }chrt ${chrt_prio}"
		break
	fi
break ; done

[ $# = 0 ] || exec $x "$@"

set +e
exec >&2
echo "launch prefix: $x"
printf 'nice: '
$x nice
printf 'ionice: '
$x ionice
exit 0
