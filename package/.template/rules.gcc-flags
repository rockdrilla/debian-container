#!/usr/bin/make -f

DEB_BUILD_MAINT_OPTIONS ?= hardening=+all

# NB: LTO should be handled separately:
# use $(with_lto) from rules.gcc-lto
dpkg_buildflags = env \
  DEB_BUILD_MAINT_OPTIONS='$(DEB_BUILD_MAINT_OPTIONS) optimize=-lto' \
  dpkg-buildflags

ASFLAGS  = $(shell $(dpkg_buildflags) --get ASFLAGS)
CFLAGS   = $(shell $(dpkg_buildflags) --get CFLAGS)
CXXFLAGS = $(shell $(dpkg_buildflags) --get CXXFLAGS)
CPPFLAGS = $(shell $(dpkg_buildflags) --get CPPFLAGS)
LDFLAGS  = $(shell $(dpkg_buildflags) --get LDFLAGS)

# enforce minimal optimization even with "noopt"
ifneq (,$(filter noopt,$(DEB_BUILD_OPTIONS)))
  CFLAGS   := -O1 $(filter-out -O%,$(CFLAGS))
  CXXFLAGS := -O1 $(filter-out -O%,$(CXXFLAGS))
  LDFLAGS  := -O1 $(filter-out -O%,$(LDFLAGS))
endif

# adjust CFLAGS to pass --debug-prefix-map for `as'
# ref: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=93371
CFLAGS_prefix_paths :=$(strip $(sort $(subst -ffile-prefix-map=,,$(filter -ffile-prefix-map=%,$(CFLAGS))) $(subst -fdebug-prefix-map=,,$(filter -fdebug-prefix-map=%,$(CFLAGS)))))
ifneq (,$(CFLAGS_prefix_paths))
  CFLAGS := $(CFLAGS) $(addprefix -Wa$(comma)--debug-prefix-map$(comma),$(CFLAGS_prefix_paths))
endif
$(call flush_vars, unset CFLAGS_prefix_paths )

# adjust CXXFLAGS too
CXXFLAGS_prefix_paths :=$(strip $(sort $(subst -ffile-prefix-map=,,$(filter -ffile-prefix-map=%,$(CXXFLAGS))) $(subst -fdebug-prefix-map=,,$(filter -fdebug-prefix-map=%,$(CXXFLAGS)))))
ifneq (,$(CXXFLAGS_prefix_paths))
  CXXFLAGS := $(CXXFLAGS) $(addprefix -Wa$(comma)--debug-prefix-map$(comma),$(CXXFLAGS_prefix_paths))
endif
$(call flush_vars, unset CXXFLAGS_prefix_paths )

export ASFLAGS CFLAGS CPPFLAGS CXXFLAGS LDFLAGS
