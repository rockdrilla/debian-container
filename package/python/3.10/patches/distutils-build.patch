--- a/Lib/distutils/command/build.py
+++ b/Lib/distutils/command/build.py
@@ -54,7 +54,7 @@ class build(Command):
         ]
 
     def initialize_options(self):
-        self.build_base = 'build'
+        self.build_base = os.getenv('DEB_PYTHON_BUILD_DIR', 'build')
         # these are decided only after 'build_base' has its final value
         # (unless overridden by the user or client)
         self.build_purelib = None
@@ -98,6 +98,10 @@ class build(Command):
             self.build_platlib = os.path.join(self.build_base,
                                               'lib' + plat_specifier)
 
+        if 'DEB_PYTHON_BUILD_DIR' in os.environ:
+            self.build_purelib = os.path.relpath(self.build_purelib, start=self.build_base)
+            self.build_platlib = os.path.relpath(self.build_platlib, start=self.build_base)
+
         # 'build_lib' is the actual directory that we will use for this
         # particular module distribution -- if user didn't supply it, pick
         # one of 'build_purelib' or 'build_platlib'.
@@ -116,6 +120,10 @@ class build(Command):
             self.build_scripts = os.path.join(self.build_base,
                                               'scripts-%d.%d' % sys.version_info[:2])
 
+        if 'DEB_PYTHON_BUILD_DIR' in os.environ:
+            self.build_temp = self.build_base
+            self.build_scripts = os.path.relpath(self.build_scripts, start=self.build_base)
+
         if self.executable is None and sys.executable:
             self.executable = os.path.normpath(sys.executable)
 
--- a/Lib/distutils/command/build_ext.py
+++ b/Lib/distutils/command/build_ext.py
@@ -105,6 +105,7 @@ class build_ext(Command):
 
     def initialize_options(self):
         self.extensions = None
+        self.build_base = None
         self.build_lib = None
         self.plat_name = None
         self.build_temp = None
@@ -131,6 +132,7 @@ class build_ext(Command):
         from distutils import sysconfig
 
         self.set_undefined_options('build',
+                                   ('build_base', 'build_base'),
                                    ('build_lib', 'build_lib'),
                                    ('build_temp', 'build_temp'),
                                    ('compiler', 'compiler'),
@@ -493,6 +495,15 @@ class build_ext(Command):
         # sort to make the resulting .so file build reproducible
         sources = sorted(sources)
 
+        if 'DEB_PYTHON_BUILD_DIR' in os.environ:
+            new_sources = []
+            for source in sources:
+                if os.path.isabs(source):
+                    new_sources.append(os.path.relpath(source, start=self.build_base))
+                else:
+                    new_sources.append(source)
+            ext.sources = sources = sorted(new_sources)
+
         ext_path = self.get_ext_fullpath(ext.name)
         depends = sources + ext.depends
         if not (self.force or newer_group(depends, ext_path, 'newer')):
