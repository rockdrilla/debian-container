Description: Configure linking for C-library wrapping modules
 Use the system C libraries, rather than sources bundled with cPython, or
 anything from /usr/local.

Forwarded: not-needed

--- a/Modules/Setup
+++ b/Modules/Setup
@@ -209,21 +209,8 @@ _symtable symtablemodule.c
 # Socket module helper for SSL support; you must comment out the other
 # socket line above, and edit the OPENSSL variable:
 # OPENSSL=/path/to/openssl/directory
-# _ssl _ssl.c \
-#     -I$(OPENSSL)/include -L$(OPENSSL)/lib \
-#     -lssl -lcrypto
-#_hashlib _hashopenssl.c \
-#     -I$(OPENSSL)/include -L$(OPENSSL)/lib \
-#     -lcrypto
-
-# To statically link OpenSSL:
-# _ssl _ssl.c \
-#     -I$(OPENSSL)/include -L$(OPENSSL)/lib \
-#     -l:libssl.a -Wl,--exclude-libs,libssl.a \
-#     -l:libcrypto.a -Wl,--exclude-libs,libcrypto.a
-#_hashlib _hashopenssl.c \
-#     -I$(OPENSSL)/include -L$(OPENSSL)/lib \
-#     -l:libcrypto.a -Wl,--exclude-libs,libcrypto.a
+#_ssl _ssl.c -lssl -lcrypto
+#_hashlib _hashopenssl.c -lcrypto
 
 # The crypt module is now disabled by default because it breaks builds
 # on many systems (where -lcrypt is needed), e.g. Linux (I believe).
@@ -256,6 +243,7 @@ _symtable symtablemodule.c
 
 #_md5 md5module.c
 
+#_hashlib _hashopenssl.c -lssl -lcrypto
 
 # The _sha module implements the SHA checksum algorithms.
 # (NIST's Secure Hash Algorithms.)
@@ -336,6 +324,7 @@ _symtable symtablemodule.c
 
 #_gdbm _gdbmmodule.c -I/usr/local/include -L/usr/local/lib -lgdbm
 
+#_ctypes _ctypes/_ctypes.c _ctypes/callbacks.c _ctypes/callproc.c _ctypes/stgdict.c _ctypes/cfield.c _ctypes/malloc_closure.c -lffi
 
 # Helper module for various ascii-encoders
 #binascii binascii.c
