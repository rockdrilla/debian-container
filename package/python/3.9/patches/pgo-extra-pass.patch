--- a/Lib/test/libregrtest/cmdline.py
+++ b/Lib/test/libregrtest/cmdline.py
@@ -168,6 +168,8 @@ class Namespace(argparse.Namespace):
         self.ignore_tests = None
         self.pgo = False
         self.pgo_extended = False
+        self.lean_pgo = False
+        self.lean_pgo_extended = False
 
         super().__init__(**kwargs)
 
@@ -307,6 +309,8 @@ def _create_parser():
                        help='enable Profile Guided Optimization (PGO) training')
     group.add_argument('--pgo-extended', action='store_true',
                        help='enable extended PGO training (slower training)')
+    group.add_argument('--lean-pgo', action='store_true', help='internal option')
+    group.add_argument('--lean-pgo-extended', action='store_true', help='internal option')
     group.add_argument('--fail-env-changed', action='store_true',
                        help='if a test file alters the environment, mark '
                             'the test as failed')
@@ -383,6 +387,8 @@ def _parse_args(args, **kwargs):
         parser.error("--pgo/-v don't go together!")
     if ns.pgo_extended:
         ns.pgo = True  # pgo_extended implies pgo
+    if ns.lean_pgo_extended:
+        ns.lean_pgo = True
 
     if ns.nowindows:
         print("Warning: the --nowindows (-n) option is deprecated. "
--- a/Lib/test/libregrtest/main.py
+++ b/Lib/test/libregrtest/main.py
@@ -227,6 +227,8 @@ class Regrtest:
         if self.ns.pgo:
             # add default PGO tests if no tests are specified
             setup_pgo_tests(self.ns)
+        if self.ns.lean_pgo and not self.ns.lean_pgo_extended:
+            setup_pgo_tests(self.ns)
 
         stdtests = STDTESTS[:]
         nottests = NOTTESTS.copy()
--- a/Makefile.pre.in
+++ b/Makefile.pre.in
@@ -522,7 +522,7 @@ build_all_generate_profile:
 
 run_profile_task:
 	@ # FIXME: can't run for a cross build
-	$(LLVM_PROF_FILE) $(RUNSHARED) ./$(BUILDPYTHON) $(PROFILE_TASK) || true
+	$(LLVM_PROF_FILE) $(RUNSHARED) $(DEB_SRC_TOPDIR)/debian/bench.sh ./$(BUILDPYTHON)
 
 build_all_merge_profile:
 	$(LLVM_PROF_MERGER)
