--- a/Lib/distutils/command/install.py
+++ b/Lib/distutils/command/install.py
@@ -35,6 +35,20 @@ INSTALL_SCHEMES = {
         'scripts': '$base/bin',
         'data'   : '$base',
         },
+    'unix_system': {
+        'purelib': '$base/lib/python$py_version_short/site-packages',
+        'platlib': '$platbase/$platlibdir/python$py_version_short/site-packages',
+        'headers': '$base/include/python$py_version_short$abiflags/$dist_name',
+        'scripts': '/usr/local/bin',
+        'data'   : '$base',
+        },
+    'unix_dist': {
+        'purelib': '$platbase/$platlibdir/python$py_version_short/dist-packages',
+        'platlib': '$base/lib/python$py_version_short/dist-packages',
+        'headers': '$base/include/python$py_version_short$abiflags/$dist_name',
+        'scripts': '$base/bin',
+        'data'   : '$base',
+        },
     'unix_home': {
         'purelib': '$base/lib/python',
         'platlib': '$base/$platlibdir/python',
@@ -428,7 +442,15 @@ class install(Command):
 
             self.install_base = self.prefix
             self.install_platbase = self.exec_prefix
-            self.select_scheme("unix_prefix")
+            if (sys.base_prefix != sys.prefix) or ('real_prefix' in sys.__dict__) or ('PYTHONUSERBASE' in os.environ) or ('VIRTUAL_ENV' in os.environ):
+                # virtual environment
+                self.select_scheme('unix_prefix')
+            elif os.getenv('K2_PYTHON_DISTINSTALL', '') == '1':
+                self.select_scheme('unix_dist')
+            elif os.getenv('K2_PYTHON_HIDEBIN', '') == '1':
+                self.select_scheme('unix_prefix')
+            else:
+                self.select_scheme('unix_system')
 
     def finalize_other(self):
         """Finalizes options for non-posix platforms"""
--- a/Lib/pydoc.py
+++ b/Lib/pydoc.py
@@ -505,6 +505,7 @@ class Doc:
                                  'marshal', 'posix', 'signal', 'sys',
                                  '_thread', 'zipimport') or
              (file.startswith(basedir) and
+              not file.startswith(os.path.join(basedir, 'dist-packages')) and
               not file.startswith(os.path.join(basedir, 'site-packages')))) and
             object.__name__ not in ('xml.etree', 'test.pydoc_mod')):
             if docloc.startswith(("http://", "https://")):
--- a/Lib/site.py
+++ b/Lib/site.py
@@ -339,11 +339,18 @@ def getsitepackages(prefixes=None):
             libdirs.append("lib")
 
         if os.sep == '/':
-            for libdir in libdirs:
-                path = os.path.join(prefix, libdir,
-                                    "python%d.%d" % sys.version_info[:2],
-                                    "site-packages")
-                sitepackages.append(path)
+            sitepackages.append(os.path.join(prefix, 'lib/python%d.%d/site-packages' % sys.version_info[:2]))
+            if (sys.base_prefix != sys.prefix) or ('real_prefix' in sys.__dict__) or ('PYTHONUSERBASE' in os.environ) or ('VIRTUAL_ENV' in os.environ):
+                # virtual environment
+                return sitepackages
+            # paths owned by container-python-{pyver}
+            sitepackages.append(os.path.join(prefix, 'lib/python%d.%d/dist-packages' % sys.version_info[:2]))
+            # compatibility with world
+            sitepackages.append(os.path.join('/usr/local/lib/python%d.%d/site-packages' % sys.version_info[:2]))
+            # compatibility with Debian and derivatives
+            sitepackages.append(os.path.join('/usr/local/lib/python%d.%d/dist-packages' % sys.version_info[:2]))
+            sitepackages.append(os.path.join('/usr/lib/python3/dist-packages'))
+            sitepackages.append(os.path.join('/usr/lib/python%d.%d/dist-packages' % sys.version_info[:2]))
         else:
             sitepackages.append(prefix)
 
--- a/Lib/sysconfig.py
+++ b/Lib/sysconfig.py
@@ -36,6 +36,26 @@ _INSTALL_SCHEMES = {
         'scripts': '{base}/bin',
         'data': '{base}',
         },
+    'posix_system': {
+        'stdlib': '{installed_base}/{platlibdir}/python{py_version_short}',
+        'platstdlib': '{platbase}/{platlibdir}/python{py_version_short}',
+        'purelib': '{base}/lib/python{py_version_short}/site-packages',
+        'platlib': '{platbase}/{platlibdir}/python{py_version_short}/site-packages',
+        'include': '{installed_base}/include/python{py_version_short}{abiflags}',
+        'platinclude': '{installed_platbase}/include/python{py_version_short}{abiflags}',
+        'scripts': '/usr/local/bin',
+        'data': '{base}',
+        },
+    'posix_dist': {
+        'stdlib': '{installed_base}/{platlibdir}/python{py_version_short}',
+        'platstdlib': '{platbase}/{platlibdir}/python{py_version_short}',
+        'purelib': '{base}/lib/python{py_version_short}/dist-packages',
+        'platlib': '{platbase}/{platlibdir}/python{py_version_short}/dist-packages',
+        'include': '{installed_base}/include/python{py_version_short}{abiflags}',
+        'platinclude': '{installed_platbase}/include/python{py_version_short}{abiflags}',
+        'scripts': '{base}/bin',
+        'data': '{base}',
+        },
     'posix_home': {
         'stdlib': '{installed_base}/lib/python',
         'platstdlib': '{base}/lib/python',
@@ -146,7 +166,7 @@ def is_python_build(check_home=False):
 _PYTHON_BUILD = is_python_build(True)
 
 if _PYTHON_BUILD:
-    for scheme in ('posix_prefix', 'posix_home'):
+    for scheme in ('posix_prefix', 'posix_home', 'posix_system', 'posix_dist'):
         _INSTALL_SCHEMES[scheme]['include'] = '{srcdir}/Include'
         _INSTALL_SCHEMES[scheme]['platinclude'] = '{projectbase}/.'
 
@@ -184,7 +204,14 @@ def _expand_vars(scheme, vars):
 def _get_default_scheme():
     if os.name == 'posix':
         # the default scheme for posix is posix_prefix
-        return 'posix_prefix'
+        if (sys.base_prefix != sys.prefix) or ('real_prefix' in sys.__dict__) or ('PYTHONUSERBASE' in os.environ) or ('VIRTUAL_ENV' in os.environ):
+            # virtual environment
+            return 'posix_prefix'
+        if os.getenv('K2_PYTHON_DISTINSTALL', '') == '1':
+            return 'posix_dist'
+        if os.getenv('K2_PYTHON_HIDEBIN', '') == '1':
+            return 'posix_prefix'
+        return 'posix_system'
     return os.name
 
 
@@ -489,7 +516,7 @@ def get_config_h_filename():
         else:
             inc_dir = _sys_home or _PROJECT_BASE
     else:
-        inc_dir = get_path('platinclude')
+        inc_dir = get_path('platinclude', 'posix_system')
     return os.path.join(inc_dir, 'pyconfig.h')
 
 
--- a/Lib/test/test_site.py
+++ b/Lib/test/test_site.py
@@ -271,18 +271,16 @@ class HelperFunctionsTests(unittest.Test
         dirs = site.getsitepackages()
         if os.sep == '/':
             # OS X, Linux, FreeBSD, etc
-            if sys.platlibdir != "lib":
-                self.assertEqual(len(dirs), 2)
-                wanted = os.path.join('xoxo', sys.platlibdir,
-                                      'python%d.%d' % sys.version_info[:2],
-                                      'site-packages')
-                self.assertEqual(dirs[0], wanted)
-            else:
-                self.assertEqual(len(dirs), 1)
-            wanted = os.path.join('xoxo', 'lib',
-                                  'python%d.%d' % sys.version_info[:2],
-                                  'site-packages')
-            self.assertEqual(dirs[-1], wanted)
+            self.assertEqual(len(dirs), 6)
+            # paths owned by container-python-{pyver}
+            self.assertEqual(dirs[0], os.path.join('xoxo/lib/python%d.%d/site-packages' % sys.version_info[:2]))
+            self.assertEqual(dirs[1], os.path.join('xoxo/lib/python%d.%d/dist-packages' % sys.version_info[:2]))
+            # compatibility with world
+            self.assertEqual(dirs[2], os.path.join('/usr/local/lib/python%d.%d/site-packages' % sys.version_info[:2]))
+            # compatibility with Debian and derivatives
+            self.assertEqual(dirs[3], os.path.join('/usr/local/lib/python%d.%d/dist-packages' % sys.version_info[:2]))
+            self.assertEqual(dirs[4], os.path.join('/usr/lib/python3/dist-packages'))
+            self.assertEqual(dirs[5], os.path.join('/usr/lib/python%d.%d/dist-packages' % sys.version_info[:2]))
         else:
             # other platforms
             self.assertEqual(len(dirs), 2)
--- a/Lib/test/test_sysconfig.py
+++ b/Lib/test/test_sysconfig.py
@@ -228,8 +228,8 @@ class TestSysConfig(unittest.TestCase):
         self.assertTrue(os.path.isfile(config_h), config_h)
 
     def test_get_scheme_names(self):
-        wanted = ('nt', 'nt_user', 'osx_framework_user',
-                  'posix_home', 'posix_prefix', 'posix_user')
+        wanted = ('nt', 'nt_user', 'osx_framework_user', 'posix_dist',
+                  'posix_home', 'posix_prefix', 'posix_system', 'posix_user')
         self.assertEqual(get_scheme_names(), wanted)
 
     @skip_unless_symlink
